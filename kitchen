#!/usr/bin/env sh

CONTEXT=$PWD                    # Build from CONTEXT folder
TAGBASE=$(basename "$CONTEXT")  # Name image TAGBASE:sometag
PKGFILE="requirements.txt"      # Install packages from PKGFILE
WORKDIR="/context"              # Copy/mount files to WORKDIR in container

help() {
  echo "Run disposable containers built from $CONTEXT"
  echo
  echo "COMMANDS"
  echo "alamode [TAG] [CMD]     Bake $TAGBASE:TAG, freeze it, and serve CMD"
  echo "bake [TAG]              Build $TAGBASE:TAG image from $CONTEXT"
  echo "clean                   Delete all $TAGBASE containers and Docker leftovers"
  echo "debug TAG SCRIPT [ARGS] Debug SCRIPT in a $TAGBASE:TAG container"
  echo "eightysix [TAG]         Delete $TAGBASE:TAG image, containers, and leftovers"
  echo "freeze [TAG]            Update $PKGFILE and rebuild $TAGBASE:TAG image"
  echo "help                    Show commands, examples, and Docker inventory"
  echo "runit [TAG] [CMD]       Run CMD in an interactive $TAGBASE:TAG container"
  echo "serve [TAG] [CMD]       runit [TAG] [CMD] with $CONTEXT mounted as $WORKDIR"
  echo
  echo "EXAMPLES"
  echo "./kitchen bake latest"
  echo "./kitchen serve latest"
  echo "./kitchen serve latest python -m this"
  echo
  echo "INVENTORY"
  echo "---- Images ----" && docker image ls | sort
  echo "---- Volumes ----" && docker volume ls | sort
  echo "---- Networks ----" && docker network ls
  echo "---- Containers ----" && docker ps --all
}
alamode() {
  bake "$1" && freeze "$1" && serve "$@"
}
bake() {
  touch "$PKGFILE" &&
  docker build \
    --tag "$TAGBASE:${1:-latest}" \
    --build-arg WORKDIR="$WORKDIR" \
    "$CONTEXT" &&
  docker image prune --force
}
clean() {
  docker ps --quiet --filter ancestor="$TAGBASE" | xargs docker rm --force &&
  docker system prune --force
}
debug() {
  serve "$1" python -m pdb "${@:2}"
}
eightysix() {
  clean && docker rmi --force "$TAGBASE:${1:-latest}" && docker image prune --force
}
freeze() {
  docker run --rm "$TAGBASE:${1:-latest}" pip freeze --exclude-editable > "$PKGFILE" &&
  bake "$1"
}
runit() {
  docker run --rm --interactive --tty "$TAGBASE:${1:-latest}" "${@:2}"
}
serve() {
  docker run --rm --interactive --tty \
    --volume "${CONTEXT}:${WORKDIR}:delegated" \
    --hostname "${TAGBASE}" \
    "$TAGBASE:${1:-latest}" "${@:2}"
}

if [ $# -eq 0 ]; then help; else "$@"; fi
